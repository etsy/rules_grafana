load("@container_structure_test//:defs.bzl", "container_structure_test")
load("@io_bazel_rules_grafana//grafana:grafana.bzl", "json_dashboards", "py_dashboards")
load("@io_bazel_rules_grafana//grafana:image.bzl", "grafana_image")
load("@rules_oci//oci:defs.bzl", "oci_tarball")
load("@rules_python//python:defs.bzl", "py_test")

json_dashboards(
    name = "json_dashboards",
    srcs = [
        "existing_uid.json",
        "no_uid.json",
    ],
)

py_dashboards(
    name = "py_dashboards",
    srcs = ["dash.py"],
)

py_test(
    name = "json_no_uid_test",
    srcs = ["test.py"],
    args = [
        "$(location :no_uid.generated.json)",
        "no_uid_json",
    ],
    data = [":no_uid.generated.json"],
    main = "test.py",
)

py_test(
    name = "json_existing_uid_test",
    srcs = ["test.py"],
    args = [
        "$(location :existing_uid.generated.json)",
        "keep_my_uid",
    ],
    data = [":existing_uid.generated.json"],
    main = "test.py",
)

py_test(
    name = "py_dash_test",
    srcs = ["test.py"],
    args = [
        "$(location :dash.generated.json)",
        "dash_py_json",
    ],
    data = [":dash.generated.json"],
    main = "test.py",
)

genrule(
    name = "test_datasources",
    outs = ["test_datasources.yaml"],
    cmd = "touch $(location test_datasources.yaml)",
)

grafana_image(
    name = "grafana",
    dashboards = [
        ":json_dashboards",
        ":py_dashboards",
    ],
    datasources = [":test_datasources.yaml"],
)

oci_tarball(
    name = "grafana_tarball",
    image = ":grafana",
    repo_tags = ["grafana:latest"],
)

container_structure_test(
    name = "grafana_docker_test",
    configs = ["docker_tests.yaml"],
    image = ":grafana",
)

grafana_image(
    name = "grafana_with_plugins",
    dashboards = [
        ":py_dashboards",
    ],
    datasources = [":test_datasources.yaml"],
    plugins = ["@grafana_plotly_plugin//:plugin"],
)

oci_tarball(
    name = "grafana_with_plugins_tarball",
    image = ":grafana_with_plugins",
    repo_tags = ["grafana_with_plugins:latest"],
)

container_structure_test(
    name = "grafana_with_plugins_docker_test",
    configs = ["docker_with_plugins_tests.yaml"],
    image = ":grafana_with_plugins",
)
